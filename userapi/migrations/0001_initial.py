# Generated by Django 2.2.1 on 2019-12-26 22:15

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, unique=True)),
                ('id', models.IntegerField(auto_created=True, default=0)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, db_index=True, help_text='登陆用的用户名', max_length=255, null=True, unique=True, verbose_name='用户')),
                ('password', models.CharField(help_text='密码', max_length=255)),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=6, verbose_name='性别')),
                ('alias', models.CharField(help_text='昵称', max_length=255, null=True)),
                ('nation', models.CharField(blank=True, help_text='汉族', max_length=15, null=True, verbose_name='汉族')),
                ('mobile_phone', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=255, null=True)),
                ('head_picture', models.ImageField(blank=True, max_length=200, null=True, upload_to='users/images/headpicture/%Y/%m')),
                ('rel_name', models.CharField(blank=True, max_length=40, null=True)),
                ('total_score', models.FloatField(blank=True, default=0, null=True)),
                ('sign_in_datetime', models.DateTimeField(auto_now=True, null=True)),
                ('sign_in_ip', models.GenericIPAddressField(null=True)),
                ('birthday', models.DateTimeField(null=True)),
                ('province', models.CharField(max_length=50, null=True)),
                ('city', models.CharField(max_length=40, null=True)),
                ('school', models.CharField(max_length=255, null=True)),
                ('address', models.CharField(blank=True, help_text='家庭地址', max_length=50, null=True, verbose_name='家庭地址')),
                ('is_active', models.BooleanField(default=True, help_text='是否邮箱验证通过了', verbose_name='已激活')),
                ('is_deleted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
                'db_table': '用户表',
                'index_together': {('username', 'email', 'mobile_phone')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='验证码')),
                ('mobile_phone', models.CharField(max_length=11, verbose_name='电话')),
                ('add_time', models.DateTimeField(auto_now=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '短信验证码',
                'verbose_name_plural': '短信验证码',
            },
        ),
        migrations.CreateModel(
            name='UserSignInfoRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_time', models.DateTimeField(auto_created=True)),
                ('sign_in_ip', models.GenericIPAddressField(default='0.0.0.0')),
                ('sign_in_way', models.IntegerField(choices=[(1, 'mobile_phone'), (2, 'email'), (3, 'weixin_auth'), (4, 'qq_auth'), (5, 'weibo_auth'), (6, 'others')], default=1)),
                ('user', models.ForeignKey(on_delete=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': '用户注册信息表',
                'index_together': {('user', 'sign_time')},
            },
        ),
        migrations.CreateModel(
            name='UserLoginRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ip', models.GenericIPAddressField(null=True)),
                ('actions_types', models.CharField(choices=[(1, '登陆'), (2, '登出')], max_length=100, null=True)),
                ('action_time', models.DateTimeField(auto_now=True, null=True)),
                ('other_info', models.CharField(default='', max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': '用户的登陆登出记录表',
                'index_together': {('user', 'actions_types', 'action_time')},
            },
        ),
    ]
